<?xml version="1.0" encoding="utf-8"?>
<ComponentSave xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Name>Controls/ButtonStandard</Name>
  <BaseType>Container</BaseType>
  <State>
    <Name>Default</Name>
    <Variable>
      <Name>Background.AnimationFrames</Name>
      <Value xsi:type="ArrayOfString" />
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>ColorCategory</Type>
      <Name>Background.ColorCategoryState</Name>
      <Value xsi:type="xsd:string">White</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float?</Type>
      <Name>Background.CustomFrameTextureCoordinateWidth</Name>
      <Value xsi:type="xsd:float">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>Background.Height</Name>
      <Value xsi:type="xsd:float">100</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>Background.HeightUnits</Name>
      <Value xsi:type="xsd:int">1</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <IsFile>true</IsFile>
      <Type>string</Type>
      <Name>Background.SourceFile</Name>
      <Value xsi:type="xsd:string">MediavelUI\Mediavel.png</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>StyleCategory</Type>
      <Name>Background.StyleCategoryState</Name>
      <Value xsi:type="xsd:string">Bordered</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>int</Type>
      <Name>Background.TextureHeight</Name>
      <Value xsi:type="xsd:int">32</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>int</Type>
      <Name>Background.TextureLeft</Name>
      <Value xsi:type="xsd:int">784</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>int</Type>
      <Name>Background.TextureTop</Name>
      <Value xsi:type="xsd:int">224</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>int</Type>
      <Name>Background.TextureWidth</Name>
      <Value xsi:type="xsd:int">32</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>Background.Width</Name>
      <Value xsi:type="xsd:float">100</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>Background.WidthUnits</Name>
      <Value xsi:type="xsd:int">1</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>Background.X</Name>
      <Value xsi:type="xsd:float">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>HorizontalAlignment</Type>
      <Name>Background.XOrigin</Name>
      <Value xsi:type="xsd:int">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>PositionUnitType</Type>
      <Name>Background.XUnits</Name>
      <Value xsi:type="xsd:int">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>Background.Y</Name>
      <Value xsi:type="xsd:float">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>VerticalAlignment</Type>
      <Name>Background.YOrigin</Name>
      <Value xsi:type="xsd:int">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>PositionUnitType</Type>
      <Name>Background.YUnits</Name>
      <Value xsi:type="xsd:int">1</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>ButtonCategory</Type>
      <Name>ButtonCategoryState</Name>
      <SetsValue>false</SetsValue>
    </Variable>
    <Variable>
      <Type>ColorCategory</Type>
      <Name>FocusedIndicator.ColorCategoryState</Name>
      <Value xsi:type="xsd:string">White</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float?</Type>
      <Name>FocusedIndicator.CustomFrameTextureCoordinateWidth</Name>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>FocusedIndicator.Height</Name>
      <Value xsi:type="xsd:float">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>FocusedIndicator.HeightUnits</Name>
      <Value xsi:type="xsd:int">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>string</Type>
      <Name>FocusedIndicator.Parent</Name>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>StyleCategory</Type>
      <Name>FocusedIndicator.StyleCategoryState</Name>
      <Value xsi:type="xsd:string">Solid</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>bool</Type>
      <Name>FocusedIndicator.Visible</Name>
      <Value xsi:type="xsd:boolean">false</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>FocusedIndicator.Y</Name>
      <Value xsi:type="xsd:float">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>VerticalAlignment</Type>
      <Name>FocusedIndicator.YOrigin</Name>
      <Value xsi:type="xsd:int">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>PositionUnitType</Type>
      <Name>FocusedIndicator.YUnits</Name>
      <Value xsi:type="xsd:int">5</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>Height</Name>
      <Value xsi:type="xsd:float">7</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>HeightUnits</Name>
      <Value xsi:type="xsd:int">1</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>bool</Type>
      <Name>IsOverrideInCodeGen</Name>
      <Value xsi:type="xsd:boolean">false</Value>
      <Category>Xamarin Forms</Category>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>bool</Type>
      <Name>IsXamarinFormsControl</Name>
      <Category>Xamarin Forms</Category>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float?</Type>
      <Name>MaxWidth</Name>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>State</Type>
      <Name>State</Name>
      <Category>States and Visibility</Category>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>Width</Name>
      <Value xsi:type="xsd:float">150</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>WidthUnits</Name>
      <Value xsi:type="xsd:int">1</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>PositionUnitType</Type>
      <Name>XUnits</Name>
      <Value xsi:type="xsd:int">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <VariableList xsi:type="VariableListSaveOfString">
      <Type>string</Type>
      <Name>Background.VariableReferences</Name>
      <IsFile>false</IsFile>
      <IsHiddenInPropertyGrid>false</IsHiddenInPropertyGrid>
      <Value />
    </VariableList>
    <VariableList xsi:type="VariableListSaveOfString">
      <Type>string</Type>
      <Name>FocusedIndicator.VariableReferences</Name>
      <IsFile>false</IsFile>
      <IsHiddenInPropertyGrid>false</IsHiddenInPropertyGrid>
      <Value />
    </VariableList>
  </State>
  <Category>
    <Name>ButtonCategory</Name>
    <State>
      <Name>Enabled</Name>
      <Variable>
        <Type>ColorCategory</Type>
        <Name>Background.ColorCategoryState</Name>
        <Value xsi:type="xsd:string">White</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureHeight</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureLeft</Name>
        <Value xsi:type="xsd:int">784</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureTop</Name>
        <Value xsi:type="xsd:int">224</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureWidth</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>bool</Type>
        <Name>FocusedIndicator.Visible</Name>
        <Value xsi:type="xsd:boolean">false</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
    <State>
      <Name>Disabled</Name>
      <Variable>
        <Type>ColorCategory</Type>
        <Name>Background.ColorCategoryState</Name>
        <Value xsi:type="xsd:string">DarkGray</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureHeight</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureLeft</Name>
        <Value xsi:type="xsd:int">784</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureTop</Name>
        <Value xsi:type="xsd:int">224</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureWidth</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>bool</Type>
        <Name>FocusedIndicator.Visible</Name>
        <Value xsi:type="xsd:boolean">false</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
    <State>
      <Name>Highlighted</Name>
      <Variable>
        <Type>ColorCategory</Type>
        <Name>Background.ColorCategoryState</Name>
        <Value xsi:type="xsd:string">White</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureHeight</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureLeft</Name>
        <Value xsi:type="xsd:int">784</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureTop</Name>
        <Value xsi:type="xsd:int">224</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureWidth</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>bool</Type>
        <Name>FocusedIndicator.Visible</Name>
        <Value xsi:type="xsd:boolean">false</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
    <State>
      <Name>Pushed</Name>
      <Variable>
        <Type>ColorCategory</Type>
        <Name>Background.ColorCategoryState</Name>
        <Value xsi:type="xsd:string">LightGray</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureHeight</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureLeft</Name>
        <Value xsi:type="xsd:int">784</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureTop</Name>
        <Value xsi:type="xsd:int">224</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureWidth</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>bool</Type>
        <Name>FocusedIndicator.Visible</Name>
        <Value xsi:type="xsd:boolean">false</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
    <State>
      <Name>HighlightedFocused</Name>
      <Variable>
        <Type>ColorCategory</Type>
        <Name>Background.ColorCategoryState</Name>
        <Value xsi:type="xsd:string">White</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureHeight</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureLeft</Name>
        <Value xsi:type="xsd:int">784</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureTop</Name>
        <Value xsi:type="xsd:int">224</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureWidth</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>bool</Type>
        <Name>FocusedIndicator.Visible</Name>
        <Value xsi:type="xsd:boolean">true</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
    <State>
      <Name>Focused</Name>
      <Variable>
        <Type>ColorCategory</Type>
        <Name>Background.ColorCategoryState</Name>
        <Value xsi:type="xsd:string">White</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureHeight</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureLeft</Name>
        <Value xsi:type="xsd:int">784</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureTop</Name>
        <Value xsi:type="xsd:int">224</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureWidth</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>bool</Type>
        <Name>FocusedIndicator.Visible</Name>
        <Value xsi:type="xsd:boolean">true</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
    <State>
      <Name>DisabledFocused</Name>
      <Variable>
        <Type>ColorCategory</Type>
        <Name>Background.ColorCategoryState</Name>
        <Value xsi:type="xsd:string">DarkGray</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureHeight</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureLeft</Name>
        <Value xsi:type="xsd:int">320</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureTop</Name>
        <Value xsi:type="xsd:int">0</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>int</Type>
        <Name>Background.TextureWidth</Name>
        <Value xsi:type="xsd:int">32</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>bool</Type>
        <Name>FocusedIndicator.Visible</Name>
        <Value xsi:type="xsd:boolean">true</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
  </Category>
  <Instance>
    <Name>Background</Name>
    <BaseType>NineSlice</BaseType>
    <DefinedByBase>false</DefinedByBase>
  </Instance>
  <Instance>
    <Name>FocusedIndicator</Name>
    <BaseType>NineSlice</BaseType>
    <DefinedByBase>false</DefinedByBase>
  </Instance>
  <Behaviors>
    <ElementBehaviorReference>
      <BehaviorName>ButtonBehavior</BehaviorName>
    </ElementBehaviorReference>
  </Behaviors>
</ComponentSave>